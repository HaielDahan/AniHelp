[{"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\index.js":"1","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\App.js":"2","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\reportWebVitals.js":"3","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\homepage.js":"4","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\signup.js":"5","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\loginpage.js":"6","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\profilepage.js":"7","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\account.js":"8","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\navbar.js":"9","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\userportal.js":"10","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\about.js":"11","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\itemetails.js":"12","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\userdetailscontact.js":"13"},{"size":535,"mtime":1677599957612,"results":"14","hashOfConfig":"15"},{"size":1950,"mtime":1690721897317,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1677599957628,"results":"17","hashOfConfig":"15"},{"size":2901,"mtime":1690976488654,"results":"18","hashOfConfig":"15"},{"size":7550,"mtime":1690893300180,"results":"19","hashOfConfig":"15"},{"size":3180,"mtime":1690893484908,"results":"20","hashOfConfig":"15"},{"size":6727,"mtime":1690715527633,"results":"21","hashOfConfig":"15"},{"size":36458,"mtime":1690716784615,"results":"22","hashOfConfig":"15"},{"size":7369,"mtime":1691001492792,"results":"23","hashOfConfig":"15"},{"size":23614,"mtime":1691007644046,"results":"24","hashOfConfig":"15"},{"size":1922,"mtime":1689269759025,"results":"25","hashOfConfig":"15"},{"size":1678,"mtime":1690714472326,"results":"26","hashOfConfig":"15"},{"size":759,"mtime":1690723499375,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1lept1i",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\index.js",[],[],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\App.js",["72","73"],[],"import './App.css';\nimport Homepage from './HomePageComponents/homepage';\nimport { BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Loginpage from './HomePageComponents/loginpage';\nimport Signup from './HomePageComponents/signup';\nimport Userportalpage from './UserPortalComps/userportal';\nimport Profilepage from './UserPortalComps/profilepage';\nimport Account from './UserPortalComps/account';\nimport About from './HomePageComponents/about';\nimport ItemDetails from './UserPortalComps/itemetails';\nimport UserDetailsContact from './UserPortalComps/userdetailscontact';\n\n\nfunction App() {\n \n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Homepage />} />\n          <Route path=\"/login\" element={<Loginpage />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/userportal\" element={<Userportalpage />} />\n          <Route path=\"/profile\" element = {<Profilepage />}/>\n          <Route path=\"/Myaccount\" element = {<Account />}/>\n          <Route path=\"/about\" element = {<About />}/>\n          <Route path=\"/item-details\" element = {<ItemDetails />}/>\n          <Route path=\"/user-details\" element = {<UserDetailsContact />}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n{/*link Modal in ReactJS - Code a React Modal Tutorial using Hooks  */}\n{/*https://www.google.com/search?q=modal+overlay+react+hooks&rlz=1C1KNTJ_iwIL1033IL1033&sxsrf=AJOqlzWCsma98JFrQPEuW6ll51621elNHw%3A1678652794481&ei=ejUOZISLHc7AkgXkgJOYCA&oq=modal+overlay+react+h&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAxgAMgUIIRCgATIFCCEQoAEyBQghEKABMggIIRAWEB4QHTIICCEQFhAeEB0yCAghEBYQHhAdMggIIRAWEB4QHTIICCEQFhAeEB0yCAghEBYQHhAdMggIIRAWEB4QHToKCAAQRxDWBBCwAzoHCAAQsAMQQzoICAAQgAQQywE6BggAEBYQHjoICAAQFhAeEA86CAgAEAgQHhANSgQIQRgAUOgQWPZGYM9RaARwAXgAgAGcAYgBvgiSAQMwLjiYAQCgAQHIAQnAAQE&sclient=gws-wiz-serp#fpstate=ive&vld=cid:c3afeac9,vid:ZCvemsUfwPQ*/}","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\reportWebVitals.js",[],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\homepage.js",["74","75"],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\signup.js",["76","77","78","79"],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\loginpage.js",["80","81"],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\profilepage.js",["82","83"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport back from '../photos/back3.jpg';\r\nimport NavbarOption from './navbar';\r\nimport { Navbar } from 'react-bootstrap';\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    height: '100vh',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)', // Adjust the alpha value as needed\r\n  },\r\n  background: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 250,\r\n    width: '70%',\r\n    height: '100%',\r\n    backgroundImage: `url(${back})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n    opacity: 0.5, // Adjust the opacity value as needed\r\n  },\r\n};\r\n\r\n\r\nfunction Profilepage() {\r\n  const [personprofile, setPersonProfile] = useState({});\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [titlename, setTitleName] = useState('')\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem('authToken');\r\n    axios\r\n      .get('http://127.0.0.1:8000/myapp/account', {\r\n        headers: {\r\n          Authorization: `${authToken}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setTitleName(res.data['name']);\r\n        setPersonProfile(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const handleCancelEdit = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleFieldChange = (field, value) => {\r\n    setPersonProfile((prevProfile) => ({\r\n      ...prevProfile,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updatedData = {\r\n        name: personprofile.name,\r\n        gender: personprofile.gender,\r\n        age: personprofile.age,\r\n        place: personprofile.place,\r\n        prefix: personprofile.prefix,\r\n        phone : personprofile.phone\r\n      };\r\n      const authToken = localStorage.getItem('authToken');\r\n      const response = await axios.put('http://127.0.0.1:8000/myapp/account/', updatedData, {\r\n      headers: {\r\n      Authorization: `${authToken}`,\r\n      },\r\n      });\r\n      if (response.status === 200) {\r\n        setTitleName(response.data['name'])\r\n        setIsEditing(false);\r\n      } else {\r\n        throw new Error('Failed to save the profile');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    const confirmed = window.confirm('Are you sure you want to delete the profile?');\r\n    if (confirmed) {\r\n      try {\r\n        const authToken = localStorage.getItem('authToken');\r\n        const response = await axios.delete('http://127.0.0.1:8000/myapp/account/', {\r\n          headers: {\r\n            Authorization: `${authToken}`,\r\n          },\r\n        });\r\n        if (response.status === 204) {\r\n          console.log(response.data)\r\n          navigate('/');\r\n        } else {\r\n          throw new Error('Failed to delete the profile');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  const handleSearch = (results) => {\r\n    if (results.length === 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavbarOption search={handleSearch}/>\r\n      <div style={{ dislay: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <h1>{titlename}</h1>\r\n      <ul>\r\n      <p>\r\n        Name: {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={personprofile.name}\r\n            onChange={(e) => handleFieldChange('name', e.target.value)}\r\n          />\r\n        ) : (\r\n          personprofile.name\r\n        )}\r\n      </p>\r\n      </ul>\r\n      <ul>\r\n      <p>\r\n        Gender: {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={personprofile.gender}\r\n            onChange={(e) => handleFieldChange('gender', e.target.value)}\r\n          />\r\n        ) : (\r\n          personprofile.gender\r\n        )}\r\n      </p>\r\n      </ul>\r\n      <ul>\r\n      <p>\r\n        Age: {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={personprofile.age}\r\n            onChange={(e) => handleFieldChange('age', e.target.value)}\r\n          />\r\n        ) : (\r\n          personprofile.age\r\n        )}\r\n      </p>\r\n      </ul>\r\n      <ul>\r\n      <p>\r\n        Residence: {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={personprofile.place}\r\n            onChange={(e) => handleFieldChange('place', e.target.value)}\r\n          />\r\n        ) : (\r\n          personprofile.place\r\n        )}\r\n      </p>\r\n      </ul>\r\n      <ul>\r\n      <p>\r\n        Phone number: {isEditing ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={personprofile.prefix}\r\n              onChange={(e) => handleFieldChange('prefix', e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={personprofile.phone}\r\n              onChange={(e) => handleFieldChange('phone', e.target.value)}\r\n            />\r\n          </>\r\n        ) : (\r\n          personprofile.prefix + personprofile.phone\r\n        )}\r\n      </p>\r\n      </ul>\r\n      {isEditing ? (\r\n        <>\r\n        <button onClick={handleSave}>Save</button>\r\n        <button onClick={handleCancelEdit}>cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n        <button onClick={handleEdit}>Edit</button>\r\n        <button onClick={handleDelete}>Delete</button>\r\n        <button onClick={() => navigate('/userportal')}>Back</button>\r\n        </>\r\n      )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profilepage;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Profilepage() {\r\n//   const [personprofile, setPersonProfile] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     const authToken = localStorage.getItem('authToken');\r\n//     axios\r\n//       .get('http://127.0.0.1:8000/myapp/account', {\r\n//         headers: {\r\n//           Authorization: `${authToken}`,\r\n//         },\r\n//       })\r\n//       .then((res) => {\r\n//         setPersonProfile(res.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n//       <h1>{personprofile.name}</h1>\r\n//       <p>Name: {personprofile.name}</p>\r\n//       <p>Gender: {personprofile.gender}</p>\r\n//       <p>Age: {personprofile.age}</p>\r\n//       <p>Residence: {personprofile.place}</p>\r\n//       <p>Phone number: {personprofile.prefix}{personprofile.phone}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Profilepage;\r\n","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\account.js",["84","85","86"],[],"import NavbarOption from './navbar';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport TextField from '@mui/material/TextField';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport \"./account.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  // other Material-UI imports...\r\n} from '@mui/material';  \r\n/// ****It will remain for me to arrange the addition of products and editing of products and correct the sorting*****\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'name',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'Product Name',\r\n  },\r\n  {\r\n    id: 'Size',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Size',\r\n  },\r\n  {\r\n    id: 'Animal',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Animal',\r\n  },\r\n  {\r\n    id: 'Category',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Category',\r\n  },\r\n  {\r\n    id: 'Description',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Description',\r\n  },\r\n  {\r\n    id: 'Image',\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: 'Image',\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected, itemsfordelete, onAddClick } = props;\r\n  const handleDelete = async () => {\r\n    const confirmed = window.confirm('Are you sure you want to delete this item?');\r\n    if (confirmed) {\r\n      try {\r\n        const authToken = localStorage.getItem('authToken');\r\n        const response = await axios.delete('http://127.0.0.1:8000/myapp/item', {\r\n          headers: {\r\n            Authorization: `${authToken}`,\r\n          },\r\n          data: {\r\n            items: itemsfordelete,\r\n          },\r\n        });\r\n        if (response.status === 204) {\r\n          window.location.reload();\r\n        } else {\r\n          throw new Error('Failed to delete the profile');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAdd = () => {\r\n    // Call the onAddClick callback from props\r\n    if (onAddClick) {\r\n      onAddClick();\r\n    }\r\n  };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          List of products\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : null}\r\n      <Tooltip title=\"Add\">\r\n        <IconButton onClick={handleAdd}>\r\n        <AddIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  itemsfordelete: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = useState('asc');\r\n  const [orderBy, setOrderBy] = useState(headCells[0].id);\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [items, setItems] = useState([]);\r\n  const [itemsForDelete, setItemsForDelete] = useState([]);\r\n  const [editingCells, setEditingCells] = useState({});\r\n  const [originalValues, setOriginalValues] = useState({});\r\n  const [file, setFile] = useState();\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [animalOptions, setAnimalOptions] = useState([]);\r\n  const [sizeOptions, setSizeOptions] = useState([]);\r\n  \r\n  \r\n  const back_styles = {\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      height: '10vh',\r\n      padding: '0 20px',\r\n    },\r\n    backButton: {\r\n      padding: '10px',\r\n      backgroundColor: 'white',\r\n      color: 'blue',\r\n      border: 'none',\r\n      cursor: 'pointer',\r\n      marginRight: '20px', // Add margin to the right to create space between back button and title\r\n    },\r\n    title: {\r\n      marginLeft: '41%', // Adjust the value as per your preference to move the title to the left\r\n      flexGrow: 1, // This makes the title occupy the remaining space and pushes the back button to the left side\r\n      textAlign: 'left', // You can align the text to the left or center based on your preference\r\n    },\r\n  };\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n  const [newProduct, setNewProduct] = useState({\r\n    // item_name: '',\r\n    // size: '',\r\n    // animal: '',\r\n    // category: '',\r\n    // description: '',\r\n    // image: '',\r\n  });\r\n\r\n  const handleAdd = () => {\r\n    // Reset newProduct state to represent a new row\r\n    setNewProduct({\r\n      item_name: '',\r\n      size: '',\r\n      animal: '',\r\n      category: '',\r\n      description: '',\r\n      image: 'null',\r\n    });\r\n  };\r\n\r\n  const handleSaveNewProduct = async () => {\r\n    const newProductWithId = { id: generateUniqueId(), ...newProduct };\r\n    const confirmed = window.confirm('Are you sure you want to save the changes?');\r\n  \r\n    if (confirmed) {\r\n      if (newProductWithId) {\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append('id', newProductWithId.id);\r\n          formData.append('item_name', newProductWithId.item_name);\r\n          formData.append('size', newProductWithId.size);\r\n          formData.append('animal', newProductWithId.animal);\r\n          formData.append('category', newProductWithId.category);\r\n          formData.append('description', newProductWithId.description);\r\n  \r\n          // Append the 'image' file data if it exists\r\n          if (newProductWithId.image !== 'null') {\r\n            console.log(\"i am here 1\");\r\n            console.log(\"i am here 1 : \", newProductWithId.image );\r\n            formData.append('image', newProductWithId.image, newProductWithId.image.name);\r\n          }\r\n          else{\r\n            console.log(\"i am here 2\");\r\n            formData.append('image','null')\r\n          }\r\n  \r\n          const authToken = localStorage.getItem('authToken');\r\n          const response = await axios.post(\r\n            'http://127.0.0.1:8000/myapp/items',\r\n            formData,\r\n            {\r\n              headers: {\r\n                Authorization: authToken,\r\n                'Content-Type': 'multipart/form-data', // Make sure to set the correct content type\r\n              },\r\n            }\r\n          );\r\n  \r\n          if (response.status === 201) {\r\n            console.log(\"this is the data:\", response.data);\r\n            window.location.reload();\r\n          } else {\r\n            throw new Error('Failed to change this item');\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    }\r\n    setNewProduct({}); // Reset newProduct state\r\n  };\r\n  \r\n\r\n\r\n  const handleCancelAdd = () => {\r\n    // Reset newProduct state to remove the new row\r\n    setNewProduct({});\r\n  };\r\n\r\n  // Generate a unique ID for the new product\r\n  const generateUniqueId = () => {\r\n    return Math.floor(Math.random() * 100000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const authToken = localStorage.getItem('authToken');\r\n    axios\r\n      .get('http://127.0.0.1:8000/myapp/items', {\r\n        headers: {\r\n          Authorization: `${authToken}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        console.log(res.data.id);\r\n        setItems(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = visibleRows.map((row) => row.id);\r\n      setSelected(newSelected);\r\n      setItemsForDelete(newSelected); // Add all items to itemsForDelete\r\n    } else {\r\n      setSelected([]);\r\n      setItemsForDelete([]); // Clear the itemsForDelete array\r\n    }\r\n  };\r\n  \r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n      setItemsForDelete((prevItems) => [...prevItems, id]); // Add the item to itemsForDelete\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      setItemsForDelete((prevItems) =>\r\n        prevItems.filter((item) => item !== id)\r\n      ); // Remove the item from itemsForDelete\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      setItemsForDelete((prevItems) =>\r\n        prevItems.filter((item) => item !== id)\r\n      ); // Remove the item from itemsForDelete\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n      setItemsForDelete((prevItems) =>\r\n        prevItems.filter((item) => item !== id)\r\n      ); // Remove the item from itemsForDelete\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    // console.log('Selected:', newSelected);\r\n    // console.log('Items For Delete:', itemsForDelete);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n  useEffect(() => {\r\n    console.log(originalValues); // Log the value of originalValues\r\n    // ...\r\n  }, [originalValues]);\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - items.length) : 0;\r\n\r\n  const visibleRows = stableSort(items, getComparator(order, orderBy)).slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const handleEditRow = (id) => {\r\n    const updatedEditingCells = { ...editingCells };\r\n    updatedEditingCells[id] = true;\r\n    setEditingCells(updatedEditingCells);\r\n  \r\n    // Store the original values of the edited cells\r\n    const editedRow = visibleRows.find((row) => row.id === id);\r\n    const originalRowValues = {\r\n      item_name: editedRow.item_name,\r\n      size: editedRow.size,\r\n      animal: editedRow.animal,\r\n      category: editedRow.category,\r\n      description: editedRow.description,\r\n      image: editedRow.image,\r\n    };\r\n    setOriginalValues((prevOriginalValues) => ({\r\n      ...prevOriginalValues,\r\n      [id]: originalRowValues,\r\n    }));\r\n  };\r\n\r\n  const handleSaveRow = (id) => {\r\n    const confirmed = window.confirm('Are you sure you want to save the changes?');\r\n    if (confirmed) {\r\n      const updatedItem = items.find((item) => item.id === id);\r\n      if (updatedItem) {\r\n        const formData = new FormData();\r\n        formData.append('id', id); // Append the 'id' directly\r\n  \r\n        formData.append('item_name', updatedItem.item_name);\r\n        formData.append('size', updatedItem.size);\r\n        formData.append('animal', updatedItem.animal);\r\n        formData.append('category', updatedItem.category);\r\n        formData.append('description', updatedItem.description);\r\n         // Append the 'image' data properly\r\n      if (file) {\r\n        formData.append('image', file, file.name);\r\n      } else {\r\n        formData.append('image', updatedItem.image);\r\n      }\r\n  \r\n        const authToken = localStorage.getItem('authToken');\r\n        axios\r\n          .put(`http://127.0.0.1:8000/myapp/item`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n              Authorization: authToken,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            if (response.status === 204) {\r\n              window.location.reload();\r\n            } else {\r\n              throw new Error('Failed to change this item');\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n\r\n  \r\n\r\n  const handleExitEdit = (id) => {\r\n    const updatedEditingCells = { ...editingCells };\r\n    updatedEditingCells[id] = false;\r\n    setEditingCells(updatedEditingCells);\r\n\r\n    // Restore the original values of the edited cells\r\n    const originalRowValues = originalValues[id];\r\n    if (originalRowValues) {\r\n      const updatedItems = items.map((item) =>\r\n        item.id === id ? { ...item, ...originalRowValues } : item\r\n      );\r\n      setItems(updatedItems);\r\n    }\r\n  };\r\n\r\n  // const handleCellChange = (event, id) => {\r\n  //   const { name, value, files } = event.target;\r\n  //   const updatedItems = items.map((item) =>\r\n  //     item.id === id ? { ...item, [name]: value || files[0] } : item\r\n  //   );\r\n  //   setItems(updatedItems);\r\n  // };\r\n\r\n\r\n  const handleCellChange = (event, id) => {\r\n    const { name, value, files } = event.target;\r\n    const updatedItems = items.map((item) =>\r\n      item.id === id ? { ...item, [name]: value } : item // Spread the entire item object\r\n    );\r\n    setItems(updatedItems);\r\n    // Update the 'file' state only if a new image is selected\r\n    if (files && files.length > 0) {\r\n      setFile(files[0]);\r\n    }\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    axios.get('http://127.0.0.1:8000/myapp/category-options', {\r\n    })\r\n      .then(res => {\r\n        // console.log(res.data)\r\n        setCategoryOptions(res.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://127.0.0.1:8000/myapp/animals-options/', {\r\n    })\r\n      .then(res => {\r\n        // console.log(\"animal:\",res.data)\r\n        setAnimalOptions(res.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('http://127.0.0.1:8000/myapp/size-options/', {\r\n    })\r\n      .then(res => {\r\n        // console.log(res.data)\r\n        setSizeOptions(res.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  const navigate = useNavigate();\r\n  const handleSearch = (results) => {\r\n    if (results.length === 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\nreturn (\r\n  <div>\r\n      <NavbarOption search={handleSearch}/>\r\n    <Box sx={back_styles.container} >\r\n      <div style={back_styles.title}>\r\n      <h1>Personal Area</h1>\r\n      </div>\r\n    </Box>\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar\r\n          numSelected={selected.length}\r\n          itemsfordelete={itemsForDelete}\r\n          onAddClick={handleAdd}// Pass the handleAdd function to the toolbar\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={items.length}\r\n            />\r\n            <TableBody>\r\n              {/* Render the new row with input fields */}\r\n              {Object.keys(newProduct).length > 0 && (\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\" />\r\n                  <TableCell>\r\n                    <TextField\r\n                      name=\"item_name\"\r\n                      value={newProduct.item_name}\r\n                      onChange={(event) => setNewProduct({ ...newProduct, item_name: event.target.value })}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id={`size-label-${newProduct.id}`}>Size</InputLabel>\r\n                        <Select\r\n                          labelId={`size-label-${newProduct.id}`}\r\n                          name=\"size\"\r\n                          value={newProduct.size}\r\n                          onChange={(event) => setNewProduct({ ...newProduct, size: event.target.value })}\r\n                          label=\"size\"\r\n                        >\r\n                          {Object.entries(sizeOptions).map(([key, value]) => (\r\n                          <MenuItem key={key} value={value}>\r\n                          {value}\r\n                          </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    \r\n                    {/* <TextField\r\n                      name=\"size\"\r\n                      value={newProduct.size}\r\n                      onChange={(event) => setNewProduct({ ...newProduct, size: event.target.value })}\r\n                    /> */}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                      <InputLabel id={`animal-label-${newProduct.id}`}>Animal</InputLabel>\r\n                      <Select\r\n                        labelId={`animal-label-${newProduct.id}`}\r\n                        name=\"animal\"\r\n                        value={newProduct.animal}\r\n                        onChange={(event) => setNewProduct({ ...newProduct, animal: event.target.value })}\r\n                        label=\"animal\"\r\n                      >\r\n                        {Object.entries(animalOptions).map(([key, value]) => (\r\n                        <MenuItem key={key} value={value}>\r\n                        {value}\r\n                        </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    \r\n                    \r\n                    {/* <TextField\r\n                      name=\"animal\"\r\n                      value={newProduct.animal}\r\n                      onChange={(event) => setNewProduct({ ...newProduct, animal: event.target.value })}\r\n                    /> */}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                  <FormControl fullWidth variant=\"outlined\">\r\n                      <InputLabel id={`category-label-${newProduct.id}`}>Category</InputLabel>\r\n                      <Select\r\n                        labelId={`category-label-${newProduct.id}`}\r\n                        name=\"category\"\r\n                        value={newProduct.category}\r\n                        onChange={(event) => setNewProduct({ ...newProduct, category: event.target.value })}\r\n                        label=\"category\"\r\n                      >\r\n                        {Object.entries(categoryOptions).map(([key, value]) => (\r\n                        <MenuItem key={key} value={value}>\r\n                        {value}\r\n                        </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  \r\n                    {/* <TextField\r\n                      name=\"category\"\r\n                      value={newProduct.category}\r\n                      onChange={(event) => setNewProduct({ ...newProduct, category: event.target.value })}\r\n                    /> */}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <TextField\r\n                      name=\"description\"\r\n                      value={newProduct.description}\r\n                      onChange={(event) => setNewProduct({ ...newProduct, description: event.target.value })}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={(event) => setNewProduct({ ...newProduct, image: event.target.files[0] })}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton onClick={handleCancelAdd}>\r\n                      <CancelIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={handleSaveNewProduct}>\r\n                      <SaveIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {/* Render the existing rows */}\r\n              {visibleRows.map((row, index) => (\r\n                <TableRow\r\n                  hover\r\n                  onClick={(event) => handleClick(event, row.id)}\r\n                  role=\"checkbox\"\r\n                  aria-checked={isSelected(row.id)}\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  selected={isSelected(row.id)}\r\n                  sx={{ cursor: 'pointer' }}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isSelected(row.id)}\r\n                      inputProps={{\r\n                        'aria-labelledby': `enhanced-table-checkbox-${index}`,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    id={`enhanced-table-checkbox-${index}`}\r\n                    scope=\"row\"\r\n                    padding=\"none\"\r\n                  >\r\n                    {editingCells[row.id] ? (\r\n                      <TextField\r\n                        name=\"item_name\"\r\n                        value={row.item_name}\r\n                        onChange={(event) => handleCellChange(event, row.id)}\r\n                      />\r\n                    ) : (\r\n                      row.item_name\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel id={`size-label-${row.id}`}>Size</InputLabel>\r\n                        <Select\r\n                          labelId={`size-label-${row.id}`}\r\n                          name=\"size\"\r\n                          value={row.size}\r\n                          onChange={(event) => handleCellChange(event, row.id)}\r\n                          label=\"size\"\r\n                        >\r\n                          {Object.entries(sizeOptions).map(([key, value]) => (\r\n                          <MenuItem key={key} value={value}>\r\n                          {value}\r\n                          </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    ) : (\r\n                      row.size\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                      <InputLabel id={`animal-label-${row.id}`}>Animal</InputLabel>\r\n                      <Select\r\n                        labelId={`animal-label-${row.id}`}\r\n                        name=\"animal\"\r\n                        value={row.animal}\r\n                        onChange={(event) => handleCellChange(event, row.id)}\r\n                        label=\"animal\"\r\n                      >\r\n                        {Object.entries(animalOptions).map(([key, value]) => (\r\n                        <MenuItem key={key} value={value}>\r\n                        {value}\r\n                        </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    ) : (\r\n                      row.animal\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                      <FormControl fullWidth variant=\"outlined\">\r\n                      <InputLabel id={`category-label-${row.id}`}>Category</InputLabel>\r\n                      <Select\r\n                        labelId={`category-label-${row.id}`}\r\n                        name=\"category\"\r\n                        value={row.category}\r\n                        onChange={(event) => handleCellChange(event, row.id)}\r\n                        label=\"Category\"\r\n                      >\r\n                        {Object.entries(categoryOptions).map(([key, value]) => (\r\n                        <MenuItem key={key} value={value}>\r\n                        {value}\r\n                        </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    ) : (\r\n                      row.category\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                      <TextField\r\n                        name=\"description\"\r\n                        value={row.description}\r\n                        onChange={(event) => handleCellChange(event, row.id)}\r\n                      />\r\n                    ) : (\r\n                      row.description\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                      <>\r\n                        <input\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={(e) => handleCellChange(e, row.id)}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <img\r\n                        src={`http://127.0.0.1:8000${row.image}`}\r\n                        alt=\"img\"\r\n                        className=\"small-image\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {editingCells[row.id] ? (\r\n                      <>\r\n                        <IconButton onClick={() => handleExitEdit(row.id)}>\r\n                          <CancelIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => handleSaveRow(row.id)}>\r\n                          <SaveIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    ) : (\r\n                      isSelected(row.id) && (\r\n                        <IconButton onClick={() => handleEditRow(row.id)}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      )\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15]}\r\n          component=\"div\"\r\n          count={items.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </Box>\r\n  </div>\r\n);\r\n}\r\n\r\n\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n\r\n// function Account() {\r\n// const[items,setItems] = useState([]);\r\n// useEffect(() => {\r\n//     const authToken = localStorage.getItem('authToken');\r\n//     axios\r\n//         .get('http://127.0.0.1:8000/myapp/items', {\r\n//         headers: {\r\n//             Authorization: `${authToken}`,\r\n//         },\r\n//     })\r\n//     .then((res) => {\r\n//         console.log(res.data);\r\n//         setItems(res.data);\r\n//     })\r\n//     .catch((error) => {\r\n//         console.error(error);\r\n//     });\r\n//       }, []);\r\n//   return (\r\n//     <div>\r\n//     <NavbarOption />\r\n//     <h1>My List:</h1>\r\n//     {items.map((item) => (\r\n//       <div key={item.id}>\r\n//       <ul> key={item.id} ,name:{item.item_name} Size: {item.size}, Animal: {item.animal}, Category: {item.category}, Description: {item.description}</ul>\r\n//     </div>\r\n//     ))}\r\n//   </div>\r\n//   );\r\n// }\r\n\r\n// export default Account;\r\n\r\n\r\n\r\n\r\n  // const handleSaveRow = (id) => {\r\n    // const confirmed = window.confirm('Are you sure you want to save the changes?');\r\n    //   if (confirmed) {\r\n    //     const updatedItem = items.find((item) => item.id === id);\r\n    //   if (updatedItem) {\r\n    //     console.log('Updated Item:', updatedItem);\r\n    //       const handleEditReq = async () => {\r\n    //         try {\r\n    //           const authToken = localStorage.getItem('authToken');\r\n    //           const response = await axios.put('http://127.0.0.1:8000/myapp/item', {\r\n    //             headers: {\r\n    //               Authorization: authToken,\r\n    //             },\r\n    //             data: {\r\n    //               items: updatedItem,\r\n    //             },\r\n    //           });\r\n    //           if (response.status === 204) {\r\n    //               window.location.reload();\r\n    //           } else {\r\n    //             throw new Error('Failed to change this item');\r\n    //           }\r\n    //         } catch (error) {\r\n    //           console.error(error);\r\n    //         }\r\n    //       };\r\n    //       handleEditReq();\r\n    //     }\r\n    //   }\r\n  // };\r\n\r\n  \r\n  // const handleSaveNewProduct = () => {\r\n  //   // Add the new product data to the items array\r\n  //   const newProductWithId = { ...newProduct, id: generateUniqueId() };\r\n  //   // setItems((prevItems) => [newProductWithId, ...prevItems]);\r\n  //   const handleSaveNewProduct = async () => {\r\n  //     // Add the new product data to the items array\r\n  //     const newProductWithId = { ...newProduct, id: generateUniqueId() };\r\n  //     const confirmed = window.confirm('Are you sure you want to save the changes?');\r\n    \r\n  //     if (confirmed) {\r\n  //       if (newProductWithId) {\r\n  //         try {\r\n  //           const authToken = localStorage.getItem('authToken');\r\n  //           const response = await axios.post(\r\n  //             'http://127.0.0.1:8000/myapp/items',\r\n  //             {\r\n  //               items: newProductWithId,\r\n  //             },\r\n  //             {\r\n  //               headers: {\r\n  //                 Authorization: authToken, // Pass the token directly here\r\n  //               },\r\n  //             }\r\n  //           );\r\n    \r\n  //           if (response.status === 204) {\r\n  //             setItems((prevItems) => [response.data, ...prevItems]);\r\n  //             window.location.reload();\r\n  //           } else {\r\n  //             throw new Error('Failed to change this item');\r\n  //           }\r\n  //         } catch (error) {\r\n  //           console.error(error);\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     setNewProduct({}); // Reset newProduct state\r\n  //   };\r\n    \r\n    // const handleSaveNewProduct = async () => {\r\n  //   const newProductWithId = {id: generateUniqueId() ,...newProduct };\r\n  //   const confirmed = window.confirm('Are you sure you want to save the changes?');\r\n  \r\n  //   if (confirmed) {\r\n  //     if (newProductWithId) {\r\n  //       try {\r\n  //         const authToken = localStorage.getItem('authToken');\r\n  //         const response = await axios.post(\r\n  //           'http://127.0.0.1:8000/myapp/items',newProductWithId,\r\n  //           {\r\n  //             headers: {\r\n  //               Authorization: authToken, \r\n  //             },\r\n  //           }\r\n  //         );\r\n  \r\n  //         if (response.status === 201) {\r\n  //           console.log(\"this is the data:\",response.data)\r\n  //           // setItems(response.data);\r\n  //           window.location.reload();\r\n  //         } else {\r\n  //           throw new Error('Failed to change this item');\r\n  //         }\r\n  //       } catch (error) {\r\n  //         console.error(error);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   setNewProduct({}); // Reset newProduct state\r\n  // };","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\navbar.js",["87","88","89","90"],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\userportal.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\HomePageComponents\\about.js",[],[],"C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\itemetails.js",["106"],[],"import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport NavbarOption from './navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = {\r\n  backButton: {\r\n    position: 'absolute',\r\n    top: '12%',\r\n    left: '3%',\r\n    padding: '0.8%',\r\n    backgroundColor: 'white',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n  imageDiv: {\r\n    position: 'absolute', \r\n    top: '20%', \r\n    left: '20%',\r\n  },\r\n  image:{\r\n    width: '30%', \r\n    height: '45%',\r\n  },\r\n  style_name:{\r\n    position: 'absolute', \r\n    top: '40%', \r\n    left: '20%',\r\n  },\r\n  item_details:{\r\n    position: 'absolute', \r\n    top: '50%', \r\n    left: '20%',\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction ItemDetails() {\r\n  const location = useLocation();\r\n  const item = location?.state?.item;\r\n  const navigate = useNavigate();\r\n  \r\n  const handleSearch = (results) => {\r\n    if (results.length === 0) {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  return( \r\n      <div>\r\n        <NavbarOption search={handleSearch}/>\r\n        <button style={styles.backButton} onClick={() => navigate('/userportal')}>\r\n          Back\r\n        </button>\r\n        <div style={styles.imageDiv}>\r\n        {item && (\r\n          <img\r\n            src={`http://127.0.0.1:8000${item.image}`}\r\n            alt={item.item_name}\r\n            style={styles.image}\r\n          />\r\n        )}\r\n        </div>\r\n      <h1 style={styles.style_name}>{item.item_name}</h1>;\r\n      <div style={styles.item_details}>\r\n        <p>adapted to: {item.animal}</p>\r\n        <p>size: {item.size}</p>\r\n        <p>description: {item.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetails;\r\n\r\n","C:\\Users\\חיאל דהן\\Desktop\\AniHelp\\Frontend\\anihelp\\src\\UserPortalComps\\userdetailscontact.js",[],[],{"ruleId":"107","severity":1,"message":"108","line":38,"column":1,"nodeType":"109","messageId":"110","endLine":38,"endColumn":72},{"ruleId":"107","severity":1,"message":"108","line":39,"column":1,"nodeType":"109","messageId":"110","endLine":39,"endColumn":560},{"ruleId":"111","severity":1,"message":"112","line":18,"column":5,"nodeType":"113","messageId":"114","endLine":18,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":63,"column":9,"nodeType":"117","messageId":"118","endLine":63,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":16,"endColumn":20},{"ruleId":"115","severity":1,"message":"120","line":16,"column":22,"nodeType":"117","messageId":"118","endLine":16,"endColumn":35},{"ruleId":"115","severity":1,"message":"121","line":17,"column":9,"nodeType":"117","messageId":"118","endLine":17,"endColumn":17},{"ruleId":"115","severity":1,"message":"122","line":17,"column":19,"nodeType":"117","messageId":"118","endLine":17,"endColumn":29},{"ruleId":"115","severity":1,"message":"123","line":3,"column":20,"nodeType":"117","messageId":"118","endLine":3,"endColumn":29},{"ruleId":"115","severity":1,"message":"124","line":3,"column":31,"nodeType":"117","messageId":"118","endLine":3,"endColumn":37},{"ruleId":"115","severity":1,"message":"125","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":16},{"ruleId":"115","severity":1,"message":"126","line":7,"column":7,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"115","severity":1,"message":"127","line":25,"column":8,"nodeType":"117","messageId":"118","endLine":25,"endColumn":22},{"ruleId":"115","severity":1,"message":"128","line":467,"column":9,"nodeType":"117","messageId":"118","endLine":467,"endColumn":18},{"ruleId":"115","severity":1,"message":"116","line":616,"column":9,"nodeType":"117","messageId":"118","endLine":616,"endColumn":17},{"ruleId":"115","severity":1,"message":"129","line":73,"column":27,"nodeType":"117","messageId":"118","endLine":73,"endColumn":45},{"ruleId":"130","severity":1,"message":"131","line":114,"column":6,"nodeType":"132","endLine":114,"endColumn":20,"suggestions":"133"},{"ruleId":"115","severity":1,"message":"134","line":120,"column":9,"nodeType":"117","messageId":"118","endLine":120,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":229,"column":1,"nodeType":"109","messageId":"110","endLine":238,"endColumn":18},{"ruleId":"115","severity":1,"message":"135","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":13},{"ruleId":"115","severity":1,"message":"136","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":22,"column":11,"nodeType":"117","messageId":"118","endLine":22,"endColumn":14},{"ruleId":"115","severity":1,"message":"138","line":22,"column":16,"nodeType":"117","messageId":"118","endLine":22,"endColumn":21},{"ruleId":"115","severity":1,"message":"139","line":22,"column":29,"nodeType":"117","messageId":"118","endLine":22,"endColumn":35},{"ruleId":"115","severity":1,"message":"140","line":22,"column":37,"nodeType":"117","messageId":"118","endLine":22,"endColumn":43},{"ruleId":"115","severity":1,"message":"141","line":22,"column":45,"nodeType":"117","messageId":"118","endLine":22,"endColumn":49},{"ruleId":"115","severity":1,"message":"142","line":22,"column":51,"nodeType":"117","messageId":"118","endLine":22,"endColumn":57},{"ruleId":"115","severity":1,"message":"143","line":23,"column":8,"nodeType":"117","messageId":"118","endLine":23,"endColumn":20},{"ruleId":"115","severity":1,"message":"144","line":43,"column":8,"nodeType":"117","messageId":"118","endLine":43,"endColumn":19},{"ruleId":"115","severity":1,"message":"145","line":315,"column":15,"nodeType":"117","messageId":"118","endLine":315,"endColumn":24},{"ruleId":"130","severity":1,"message":"146","line":328,"column":6,"nodeType":"132","endLine":328,"endColumn":32,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":382,"column":4,"nodeType":"132","endLine":382,"endColumn":10,"suggestions":"149"},{"ruleId":"111","severity":1,"message":"150","line":429,"column":15,"nodeType":"113","messageId":"114","endLine":429,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":650,"column":1,"nodeType":"109","messageId":"110","endLine":652,"endColumn":18},{"ruleId":"115","severity":1,"message":"123","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-dupe-keys","Duplicate key 'position'.","ObjectExpression","unexpected","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'err_message' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'err_flag' is assigned a value but never used.","'setErrFlag' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Navbar' is defined but never used.","'styles' is assigned a value but never used.","'FilterListIcon' is defined but never used.","'emptyRows' is assigned a value but never used.","'setCategoryOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array. If 'search' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["151"],"'handleMenuOpen' is assigned a value but never used.","'Stack' is defined but never used.","'Divider' is defined but never used.","'red' is defined but never used.","'green' is defined but never used.","'yellow' is defined but never used.","'purple' is defined but never used.","'pink' is defined but never used.","'orange' is defined but never used.","'FavoriteIcon' is defined but never used.","'ItemDetails' is defined but never used.","'authToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkbox_selection' and 'checkbox_selection_2'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'handleUserDetailsClick'. Either include it or remove the dependency array.",["153"],"Duplicate key 'color'.",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [displayItems, search]",{"range":"160","text":"161"},"Update the dependencies array to be: [selectedCategory, filter, checkbox_selection, checkbox_selection_2]",{"range":"162","text":"163"},"Update the dependencies array to be: [handleUserDetailsClick, temp]",{"range":"164","text":"165"},[3336,3350],"[displayItems, search]",[10838,10864],"[selectedCategory, filter, checkbox_selection, checkbox_selection_2]",[12286,12292],"[handleUserDetailsClick, temp]"]